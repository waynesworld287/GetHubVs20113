<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="MusicDataDataSet" targetNamespace="http://tempuri.org/MusicDataDataSet.xsd" xmlns:mstns="http://tempuri.org/MusicDataDataSet.xsd" xmlns="http://tempuri.org/MusicDataDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="MusicDataConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="MusicDataConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.WindowsApplication2.My.MySettings.GlobalReference.Default.MusicDataConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ComposerTableAdapter" GeneratorDataComponentClassName="ComposerTableAdapter" Name="Composer" UserDataComponentName="ComposerTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MusicDataConnectionString (MySettings)" DbObjectName="MusicData.dbo.Composer" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Composer] WHERE (([ComposerId] = @Original_ComposerId) AND ((@IsNull_Composer = 1 AND [Composer] IS NULL) OR ([Composer] = @Original_Composer)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ComposerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ComposerId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Composer" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Composer" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Composer" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Composer" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Composer] ([Composer]) VALUES (@Composer)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Composer" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Composer" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT ComposerId, Composer FROM dbo.Composer ORDER BY Composer</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Composer] SET [Composer] = @Composer WHERE (([ComposerId] = @Original_ComposerId) AND ((@IsNull_Composer = 1 AND [Composer] IS NULL) OR ([Composer] = @Original_Composer)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Composer" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Composer" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ComposerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ComposerId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Composer" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Composer" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Composer" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Composer" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ComposerId" DataSetColumn="ComposerId" />
              <Mapping SourceColumn="Composer" DataSetColumn="Composer" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MiscLookupTableAdapter" GeneratorDataComponentClassName="MiscLookupTableAdapter" Name="MiscLookup" UserDataComponentName="MiscLookupTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MusicDataConnectionString (MySettings)" DbObjectName="MusicData.dbo.MiscLookup" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[MiscLookup] WHERE (([LookupId] = @Original_LookupId) AND ([LookupType] = @Original_LookupType) AND ((@IsNull_LookupData = 1 AND [LookupData] IS NULL) OR ([LookupData] = @Original_LookupData)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_LookupId" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="LookupId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_LookupType" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="LookupType" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_LookupData" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LookupData" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_LookupData" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LookupData" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[MiscLookup] ([LookupType], [LookupData]) VALUES (@LookupType, @LookupData);
SELECT LookupId, LookupType, LookupData FROM MiscLookup WHERE (LookupId = SCOPE_IDENTITY()) ORDER BY LookupData</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@LookupType" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="LookupType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@LookupData" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LookupData" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT LookupId, LookupType, LookupData FROM dbo.MiscLookup ORDER BY LookupData</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[MiscLookup] SET [LookupType] = @LookupType, [LookupData] = @LookupData WHERE (([LookupId] = @Original_LookupId) AND ([LookupType] = @Original_LookupType) AND ((@IsNull_LookupData = 1 AND [LookupData] IS NULL) OR ([LookupData] = @Original_LookupData)));
SELECT LookupId, LookupType, LookupData FROM MiscLookup WHERE (LookupId = @LookupId) ORDER BY LookupData</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@LookupType" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="LookupType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@LookupData" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LookupData" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_LookupId" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="LookupId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_LookupType" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="LookupType" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_LookupData" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LookupData" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_LookupData" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LookupData" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="LookupId" ColumnName="LookupId" DataSourceName="MusicData.dbo.MiscLookup" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@LookupId" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="LookupId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="LookupId" DataSetColumn="LookupId" />
              <Mapping SourceColumn="LookupType" DataSetColumn="LookupType" />
              <Mapping SourceColumn="LookupData" DataSetColumn="LookupData" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MusicInventoryTableAdapter" GeneratorDataComponentClassName="MusicInventoryTableAdapter" Name="MusicInventory" UserDataComponentName="MusicInventoryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MusicDataConnectionString (MySettings)" DbObjectName="MusicData.dbo.MusicInventory" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[MusicInventory] WHERE (([MusicId] = @Original_MusicId) AND ((@IsNull_MusicTitle = 1 AND [MusicTitle] IS NULL) OR ([MusicTitle] = @Original_MusicTitle)) AND ((@IsNull_Composer = 1 AND [Composer] IS NULL) OR ([Composer] = @Original_Composer)) AND ((@IsNull_PublishingCompany = 1 AND [PublishingCompany] IS NULL) OR ([PublishingCompany] = @Original_PublishingCompany)) AND ((@IsNull_Price = 1 AND [Price] IS NULL) OR ([Price] = @Original_Price)) AND ((@IsNull_NumberOfCopies = 1 AND [NumberOfCopies] IS NULL) OR ([NumberOfCopies] = @Original_NumberOfCopies)) AND ((@IsNull_VoiceType = 1 AND [VoiceType] IS NULL) OR ([VoiceType] = @Original_VoiceType)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MusicId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MusicId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_MusicTitle" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MusicTitle" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_MusicTitle" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MusicTitle" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Composer" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Composer" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_Composer" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="Composer" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_PublishingCompany" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PublishingCompany" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_PublishingCompany" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="PublishingCompany" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_Price" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_NumberOfCopies" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NumberOfCopies" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_NumberOfCopies" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="NumberOfCopies" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_VoiceType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VoiceType" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_VoiceType" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="VoiceType" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[MusicInventory] ([MusicTitle], [Composer], [PublishingCompany], [Price], [NumberOfCopies], [VoiceType], [AdditionalNote], [CoverPhoto], [PageOnePhoto]) VALUES (@MusicTitle, @Composer, @PublishingCompany, @Price, @NumberOfCopies, @VoiceType, @AdditionalNote, @CoverPhoto, @PageOnePhoto);
SELECT MusicId, MusicTitle, Composer, PublishingCompany, Price, NumberOfCopies, VoiceType, AdditionalNote, CoverPhoto, PageOnePhoto FROM MusicInventory WHERE (MusicId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@MusicTitle" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MusicTitle" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Composer" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="Composer" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@PublishingCompany" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="PublishingCompany" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Price" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@NumberOfCopies" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="NumberOfCopies" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@VoiceType" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="VoiceType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@AdditionalNote" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AdditionalNote" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@CoverPhoto" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="CoverPhoto" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@PageOnePhoto" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="PageOnePhoto" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MusicId, MusicTitle, Composer, PublishingCompany, Price, NumberOfCopies, VoiceType, AdditionalNote, CoverPhoto, PageOnePhoto FROM dbo.MusicInventory</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[MusicInventory] SET [MusicTitle] = @MusicTitle, [Composer] = @Composer, [PublishingCompany] = @PublishingCompany, [Price] = @Price, [NumberOfCopies] = @NumberOfCopies, [VoiceType] = @VoiceType, [AdditionalNote] = @AdditionalNote, [CoverPhoto] = @CoverPhoto, [PageOnePhoto] = @PageOnePhoto WHERE (([MusicId] = @Original_MusicId) AND ((@IsNull_MusicTitle = 1 AND [MusicTitle] IS NULL) OR ([MusicTitle] = @Original_MusicTitle)) AND ((@IsNull_Composer = 1 AND [Composer] IS NULL) OR ([Composer] = @Original_Composer)) AND ((@IsNull_PublishingCompany = 1 AND [PublishingCompany] IS NULL) OR ([PublishingCompany] = @Original_PublishingCompany)) AND ((@IsNull_Price = 1 AND [Price] IS NULL) OR ([Price] = @Original_Price)) AND ((@IsNull_NumberOfCopies = 1 AND [NumberOfCopies] IS NULL) OR ([NumberOfCopies] = @Original_NumberOfCopies)) AND ((@IsNull_VoiceType = 1 AND [VoiceType] IS NULL) OR ([VoiceType] = @Original_VoiceType)));
SELECT MusicId, MusicTitle, Composer, PublishingCompany, Price, NumberOfCopies, VoiceType, AdditionalNote, CoverPhoto, PageOnePhoto FROM MusicInventory WHERE (MusicId = @MusicId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@MusicTitle" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MusicTitle" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Composer" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="Composer" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@PublishingCompany" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="PublishingCompany" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Price" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@NumberOfCopies" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="NumberOfCopies" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@VoiceType" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="VoiceType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@AdditionalNote" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AdditionalNote" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@CoverPhoto" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="CoverPhoto" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@PageOnePhoto" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="PageOnePhoto" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MusicId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MusicId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_MusicTitle" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MusicTitle" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_MusicTitle" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MusicTitle" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Composer" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Composer" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_Composer" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="Composer" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_PublishingCompany" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PublishingCompany" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_PublishingCompany" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="PublishingCompany" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_Price" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_NumberOfCopies" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NumberOfCopies" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_NumberOfCopies" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="NumberOfCopies" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_VoiceType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VoiceType" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_VoiceType" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="VoiceType" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="MusicId" ColumnName="MusicId" DataSourceName="MusicData.dbo.MusicInventory" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@MusicId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="MusicId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MusicId" DataSetColumn="MusicId" />
              <Mapping SourceColumn="MusicTitle" DataSetColumn="MusicTitle" />
              <Mapping SourceColumn="Composer" DataSetColumn="Composer" />
              <Mapping SourceColumn="PublishingCompany" DataSetColumn="PublishingCompany" />
              <Mapping SourceColumn="Price" DataSetColumn="Price" />
              <Mapping SourceColumn="NumberOfCopies" DataSetColumn="NumberOfCopies" />
              <Mapping SourceColumn="VoiceType" DataSetColumn="VoiceType" />
              <Mapping SourceColumn="AdditionalNote" DataSetColumn="AdditionalNote" />
              <Mapping SourceColumn="CoverPhoto" DataSetColumn="CoverPhoto" />
              <Mapping SourceColumn="PageOnePhoto" DataSetColumn="PageOnePhoto" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PerformanceHistoryTableAdapter" GeneratorDataComponentClassName="PerformanceHistoryTableAdapter" Name="PerformanceHistory" UserDataComponentName="PerformanceHistoryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MusicDataConnectionString (MySettings)" DbObjectName="MusicData.dbo.PerformanceHistory" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PerformanceHistory] WHERE (([PerformanceDate] = @Original_PerformanceDate) AND ([MusicId] = @Original_MusicId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_PerformanceDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="PerformanceDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MusicId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MusicId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PerformanceHistory] ([PerformanceDate], [MusicId], [PerformanceNote]) VALUES (@PerformanceDate, @MusicId, @PerformanceNote);
SELECT PerformanceDate, MusicId, PerformanceNote FROM PerformanceHistory WHERE (MusicId = @MusicId) AND (PerformanceDate = @PerformanceDate)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@PerformanceDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="PerformanceDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MusicId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MusicId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PerformanceNote" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PerformanceNote" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT PerformanceDate, MusicId, PerformanceNote FROM dbo.PerformanceHistory</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PerformanceHistory] SET [PerformanceDate] = @PerformanceDate, [MusicId] = @MusicId, [PerformanceNote] = @PerformanceNote WHERE (([PerformanceDate] = @Original_PerformanceDate) AND ([MusicId] = @Original_MusicId));
SELECT PerformanceDate, MusicId, PerformanceNote FROM PerformanceHistory WHERE (MusicId = @MusicId) AND (PerformanceDate = @PerformanceDate)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@PerformanceDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="PerformanceDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MusicId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MusicId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PerformanceNote" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PerformanceNote" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_PerformanceDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="PerformanceDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MusicId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MusicId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PerformanceDate" DataSetColumn="PerformanceDate" />
              <Mapping SourceColumn="MusicId" DataSetColumn="MusicId" />
              <Mapping SourceColumn="PerformanceNote" DataSetColumn="PerformanceNote" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PublishingCompanyTableAdapter" GeneratorDataComponentClassName="PublishingCompanyTableAdapter" Name="PublishingCompany" UserDataComponentName="PublishingCompanyTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MusicDataConnectionString (MySettings)" DbObjectName="MusicData.dbo.PublishingCompany" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PublishingCompany] WHERE (([PcId] = @Original_PcId) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PcId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PcId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PublishingCompany] ([Name]) VALUES (@Name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT PcId, Name FROM dbo.PublishingCompany ORDER BY Name</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PublishingCompany] SET [Name] = @Name WHERE (([PcId] = @Original_PcId) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PcId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PcId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PcId" DataSetColumn="PcId" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="MusicDataDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="MusicDataDataSet" msprop:Generator_UserDSName="MusicDataDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Composer" msprop:Generator_TableClassName="ComposerDataTable" msprop:Generator_TableVarName="tableComposer" msprop:Generator_RowChangedName="ComposerRowChanged" msprop:Generator_TablePropName="Composer" msprop:Generator_RowDeletingName="ComposerRowDeleting" msprop:Generator_RowChangingName="ComposerRowChanging" msprop:Generator_RowEvHandlerName="ComposerRowChangeEventHandler" msprop:Generator_RowDeletedName="ComposerRowDeleted" msprop:Generator_RowClassName="ComposerRow" msprop:Generator_UserTableName="Composer" msprop:Generator_RowEvArgName="ComposerRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ComposerId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnComposerId" msprop:Generator_ColumnPropNameInRow="ComposerId" msprop:Generator_ColumnPropNameInTable="ComposerIdColumn" msprop:Generator_UserColumnName="ComposerId" type="xs:int" />
              <xs:element name="Composer" msprop:Generator_ColumnVarNameInTable="columnComposer" msprop:Generator_ColumnPropNameInRow="Composer" msprop:Generator_ColumnPropNameInTable="ComposerColumn" msprop:Generator_UserColumnName="Composer" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MiscLookup" msprop:Generator_TableClassName="MiscLookupDataTable" msprop:Generator_TableVarName="tableMiscLookup" msprop:Generator_RowChangedName="MiscLookupRowChanged" msprop:Generator_TablePropName="MiscLookup" msprop:Generator_RowDeletingName="MiscLookupRowDeleting" msprop:Generator_RowChangingName="MiscLookupRowChanging" msprop:Generator_RowEvHandlerName="MiscLookupRowChangeEventHandler" msprop:Generator_RowDeletedName="MiscLookupRowDeleted" msprop:Generator_RowClassName="MiscLookupRow" msprop:Generator_UserTableName="MiscLookup" msprop:Generator_RowEvArgName="MiscLookupRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="LookupId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnLookupId" msprop:Generator_ColumnPropNameInRow="LookupId" msprop:Generator_ColumnPropNameInTable="LookupIdColumn" msprop:Generator_UserColumnName="LookupId" type="xs:short" />
              <xs:element name="LookupType" msprop:Generator_ColumnVarNameInTable="columnLookupType" msprop:Generator_ColumnPropNameInRow="LookupType" msprop:Generator_ColumnPropNameInTable="LookupTypeColumn" msprop:Generator_UserColumnName="LookupType" type="xs:short" />
              <xs:element name="LookupData" msprop:Generator_ColumnVarNameInTable="columnLookupData" msprop:Generator_ColumnPropNameInRow="LookupData" msprop:Generator_ColumnPropNameInTable="LookupDataColumn" msprop:Generator_UserColumnName="LookupData" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MusicInventory" msprop:Generator_TableClassName="MusicInventoryDataTable" msprop:Generator_TableVarName="tableMusicInventory" msprop:Generator_RowChangedName="MusicInventoryRowChanged" msprop:Generator_TablePropName="MusicInventory" msprop:Generator_RowDeletingName="MusicInventoryRowDeleting" msprop:Generator_RowChangingName="MusicInventoryRowChanging" msprop:Generator_RowEvHandlerName="MusicInventoryRowChangeEventHandler" msprop:Generator_RowDeletedName="MusicInventoryRowDeleted" msprop:Generator_RowClassName="MusicInventoryRow" msprop:Generator_UserTableName="MusicInventory" msprop:Generator_RowEvArgName="MusicInventoryRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MusicId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnMusicId" msprop:Generator_ColumnPropNameInRow="MusicId" msprop:Generator_ColumnPropNameInTable="MusicIdColumn" msprop:Generator_UserColumnName="MusicId" type="xs:int" />
              <xs:element name="MusicTitle" msprop:Generator_ColumnVarNameInTable="columnMusicTitle" msprop:Generator_ColumnPropNameInRow="MusicTitle" msprop:Generator_ColumnPropNameInTable="MusicTitleColumn" msprop:Generator_UserColumnName="MusicTitle" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Composer" msprop:Generator_ColumnVarNameInTable="columnComposer" msprop:Generator_ColumnPropNameInRow="Composer" msprop:Generator_ColumnPropNameInTable="ComposerColumn" msprop:Generator_UserColumnName="Composer" type="xs:short" minOccurs="0" />
              <xs:element name="PublishingCompany" msprop:Generator_ColumnVarNameInTable="columnPublishingCompany" msprop:Generator_ColumnPropNameInRow="PublishingCompany" msprop:Generator_ColumnPropNameInTable="PublishingCompanyColumn" msprop:Generator_UserColumnName="PublishingCompany" type="xs:short" minOccurs="0" />
              <xs:element name="Price" msprop:Generator_ColumnVarNameInTable="columnPrice" msprop:Generator_ColumnPropNameInRow="Price" msprop:Generator_ColumnPropNameInTable="PriceColumn" msprop:Generator_UserColumnName="Price" type="xs:decimal" minOccurs="0" />
              <xs:element name="NumberOfCopies" msprop:Generator_ColumnVarNameInTable="columnNumberOfCopies" msprop:Generator_ColumnPropNameInRow="NumberOfCopies" msprop:Generator_ColumnPropNameInTable="NumberOfCopiesColumn" msprop:Generator_UserColumnName="NumberOfCopies" type="xs:short" minOccurs="0" />
              <xs:element name="VoiceType" msprop:Generator_ColumnVarNameInTable="columnVoiceType" msprop:Generator_ColumnPropNameInRow="VoiceType" msprop:Generator_ColumnPropNameInTable="VoiceTypeColumn" msprop:Generator_UserColumnName="VoiceType" type="xs:short" minOccurs="0" />
              <xs:element name="AdditionalNote" msprop:Generator_ColumnVarNameInTable="columnAdditionalNote" msprop:Generator_ColumnPropNameInRow="AdditionalNote" msprop:Generator_ColumnPropNameInTable="AdditionalNoteColumn" msprop:Generator_UserColumnName="AdditionalNote" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CoverPhoto" msprop:Generator_ColumnVarNameInTable="columnCoverPhoto" msprop:Generator_ColumnPropNameInRow="CoverPhoto" msprop:Generator_ColumnPropNameInTable="CoverPhotoColumn" msprop:Generator_UserColumnName="CoverPhoto" type="xs:base64Binary" minOccurs="0" />
              <xs:element name="PageOnePhoto" msprop:Generator_ColumnVarNameInTable="columnPageOnePhoto" msprop:Generator_ColumnPropNameInRow="PageOnePhoto" msprop:Generator_ColumnPropNameInTable="PageOnePhotoColumn" msprop:Generator_UserColumnName="PageOnePhoto" type="xs:base64Binary" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PerformanceHistory" msprop:Generator_TableClassName="PerformanceHistoryDataTable" msprop:Generator_TableVarName="tablePerformanceHistory" msprop:Generator_RowChangedName="PerformanceHistoryRowChanged" msprop:Generator_TablePropName="PerformanceHistory" msprop:Generator_RowDeletingName="PerformanceHistoryRowDeleting" msprop:Generator_RowChangingName="PerformanceHistoryRowChanging" msprop:Generator_RowEvHandlerName="PerformanceHistoryRowChangeEventHandler" msprop:Generator_RowDeletedName="PerformanceHistoryRowDeleted" msprop:Generator_RowClassName="PerformanceHistoryRow" msprop:Generator_UserTableName="PerformanceHistory" msprop:Generator_RowEvArgName="PerformanceHistoryRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PerformanceDate" msprop:Generator_ColumnVarNameInTable="columnPerformanceDate" msprop:Generator_ColumnPropNameInRow="PerformanceDate" msprop:Generator_ColumnPropNameInTable="PerformanceDateColumn" msprop:Generator_UserColumnName="PerformanceDate" type="xs:dateTime" />
              <xs:element name="MusicId" msprop:Generator_ColumnVarNameInTable="columnMusicId" msprop:Generator_ColumnPropNameInRow="MusicId" msprop:Generator_ColumnPropNameInTable="MusicIdColumn" msprop:Generator_UserColumnName="MusicId" type="xs:int" />
              <xs:element name="PerformanceNote" msprop:Generator_ColumnVarNameInTable="columnPerformanceNote" msprop:Generator_ColumnPropNameInRow="PerformanceNote" msprop:Generator_ColumnPropNameInTable="PerformanceNoteColumn" msprop:Generator_UserColumnName="PerformanceNote" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PublishingCompany" msprop:Generator_TableClassName="PublishingCompanyDataTable" msprop:Generator_TableVarName="tablePublishingCompany" msprop:Generator_RowChangedName="PublishingCompanyRowChanged" msprop:Generator_TablePropName="PublishingCompany" msprop:Generator_RowDeletingName="PublishingCompanyRowDeleting" msprop:Generator_RowChangingName="PublishingCompanyRowChanging" msprop:Generator_RowEvHandlerName="PublishingCompanyRowChangeEventHandler" msprop:Generator_RowDeletedName="PublishingCompanyRowDeleted" msprop:Generator_RowClassName="PublishingCompanyRow" msprop:Generator_UserTableName="PublishingCompany" msprop:Generator_RowEvArgName="PublishingCompanyRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PcId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnPcId" msprop:Generator_ColumnPropNameInRow="PcId" msprop:Generator_ColumnPropNameInTable="PcIdColumn" msprop:Generator_UserColumnName="PcId" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Composer" />
      <xs:field xpath="mstns:ComposerId" />
    </xs:unique>
    <xs:unique name="MiscLookup_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:MiscLookup" />
      <xs:field xpath="mstns:LookupId" />
    </xs:unique>
    <xs:unique name="MusicInventory_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:MusicInventory" />
      <xs:field xpath="mstns:MusicId" />
    </xs:unique>
    <xs:unique name="PerformanceHistory_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PerformanceHistory" />
      <xs:field xpath="mstns:PerformanceDate" />
      <xs:field xpath="mstns:MusicId" />
    </xs:unique>
    <xs:unique name="PublishingCompany_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PublishingCompany" />
      <xs:field xpath="mstns:PcId" />
    </xs:unique>
  </xs:element>
</xs:schema>